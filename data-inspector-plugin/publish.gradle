apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

publishing {
  publications {
    pluginJar(MavenPublication) {
      groupId GROUP
      artifactId PLUGIN_ARTIFACT_ID
      version VERSION_NAME
      from components.java
      artifact pluginSourcesJar
      artifact pluginJavadocsJar
      pom.withXml {
        asNode().appendNode('description', POM_DESCRIPTION)
        asNode().children().last() + rootProject.ext.pomConfig
      }
    }
  }
  repositories {
    maven {
      credentials {
        username project.hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : null
        password project.hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : null
      }
      url version.endsWith('SNAPSHOT') ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL
    }
  }
}

bintray {
  user = project.hasProperty('BINTRAY_USERNAME') ? BINTRAY_USERNAME : null
  key = project.hasProperty('BINTRAY_API_KEY') ? BINTRAY_API_KEY : null
  publications = ['pluginJar']
  pkg {
    name = BINTRAY_PKG_NAME
    repo = 'maven'
    version {
      name = VERSION_NAME
      gpg {
        sign = true
        passphrase = project.hasProperty('BINTRAY_GPG_PASSPHRASE') ? BINTRAY_GPG_PASSPHRASE : null
      }
    }
  }
}

task pluginJavadocs(type: Groovydoc) {
  source = sourceSets.main.groovy.srcDirs
  classpath = sourceSets.main.compileClasspath
}

task pluginJavadocsJar(type: Jar, dependsOn: pluginJavadocs) {
  classifier = 'javadoc'
  from pluginJavadocs.destinationDir
}

task pluginSourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allGroovy
}

artifacts {
  archives pluginSourcesJar
  archives pluginJavadocsJar
}
